<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.memberMapper">
<select id="idFind" parameterType="model.MemberDTO" resultType="string" >
select  rpad(substr(MEM_ID,1,4),length(mem_id),'*') 
		from member
		where mem_phone=#{memPhone} and MEM_EMAIL=#{memEmail} and mem_name=#{memName}


</select>
<update id="updateCkOk" parameterType="model.MemberDTO">
update member
set ckOk=#{ckOk}
where MEM_EMAIL=#{memEmail} and ckOk is null


</update> 
	<update id="memPwUpdate" parameterType="model.MemberDTO">
		update member
		set MEM_PW = #{memPw}
		where mem_id = #{memId}
	</update>
	<select id="memInfo" parameterType="string"
		resultType="model.MemberDTO">
		select MEM_ID memId,MEM_PW memPw,MEM_ADDRESS memAddress,
		MEM_NAME memName,MEM_PHONE memPhone,
		MEM_BIRTH memBirth,MEM_GENDER
		memGender,
		MEM_ACCOUNT memAccount,MEM_EMAIL memEmail,
		MEM_EMAIL_CK
		memEmailCk ,POST_NUMBER postNumber,DETAIL_ADD detailAdd
		from member
		where mem_Id=#{memId}
	</select>
	<update id="memUpdate" parameterType="model.MemberDTO">
		update member
		set POST_NUMBER = #{postNumber},
		MEM_ADDRESS=#{memAddress} ,
		DETAIL_ADD = #{detailAdd}, MEM_EMAIL =
		#{memEmail} ,
		MEM_EMAIL_CK = #{memEmailCk} , MEM_PHONE = #{memPhone},

		MEM_ACCOUNT =
		<if test="memAccount == null">null</if>
		<if test="memAccount != null">#{memAccount}</if>
		where mem_id = #{memId}
	</update>
	<insert id="memJoin" parameterType="model.MemberDTO">
		insert into member(MEM_ID,MEM_PW,MEM_ADDRESS,MEM_NAME,MEM_PHONE,
		MEM_BIRTH,MEM_GENDER,MEM_ACCOUNT,MEM_EMAIL,MEM_EMAIL_CK,POST_NUMBER,DETAIL_ADD)
		values(#{memId},#{memPw},#{memAddress},#{memName},
		#{memPhone},#{memBirth},#{memGender},
		<if test="memAccount == null">null</if>
		<if test="memAccount != null">#{memAccount}</if>
		,
		#{memEmail},#{memEmailCk},
		#{postNumber},#{detailAdd})

	</insert>
<select id="memList" resultType="model.MemberDTO" parameterType="model.MemberDTO">
select rn, memId, memPw, memAddress, memName, memPhone, memBirth, memGender,
        memAccount, memEmail, memEmailCk, postNumber, detailAdd
from(
	select rownum rn, MEM_ID memId,MEM_PW memPw,MEM_ADDRESS memAddress, MEM_NAME memName,
	 	   MEM_PHONE memPhone, MEM_BIRTH memBirth, MEM_GENDER memGender, 
	 	   MEM_ACCOUNT memAccount, MEM_EMAIL memEmail, MEM_EMAIL_CK memEmailCk,
		   POST_NUMBER postNumber, DETAIL_ADD detailAdd
	from member )
	<trim prefix="where" prefixOverrides="AND | OR">
		<if test="memId != null">
			memId = #{memId}
		</if>
		<if test="startEndPageDTO != null">
			and rn between #{startEndPageDTO.startRow} 
			and  #{startEndPageDTO.endRow} 
		</if>
	</trim>
</select>
	<delete id="memDel">
		delete from member
		where mem_id =#{memId}

	</delete>
	<delete id="memDelete" parameterType="string">
		delete from member
		where MEM_ID = #{memId}
	</delete>
<select id="getMemberCount" resultType="int">
select count(*) from member
</select>

</mapper>
  